/**
 * Flowtype definitions for experiment
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 * @flow
 */

declare type Payload = { [key: string]: (string | boolean) | null | void, ... };
export type Experiment = {
  isEnabled: () => boolean,
  isDisabled: () => boolean,
  getTreatment: () => string,
  log: (arg0: string, payload?: Payload) => Experiment,
  logStart: (payload?: Payload) => Experiment,
  logComplete: (payload?: Payload) => Experiment,
  ...
};
declare type ExperimentOptions = {
  name: string,
  sample?: number,
  logTreatment?: (arg0: {
    name: string,
    treatment: string,
    payload: Payload,
    throttle: number,
    ...
  }) => void,
  logCheckpoint?: (arg0: {
    name: string,
    treatment: string,
    checkpoint: string,
    payload: Payload,
    throttle: number,
    ...
  }) => void,
  sticky?: boolean,
  ...
};
declare export function experiment(x: ExperimentOptions): Experiment;
declare export {};
